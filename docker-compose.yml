version: "3.8"
name: "the-bin-backend"
networks:
  network:


volumes:
  mysql_the_bin:
  cache:

services:
  mysql:
    image: mysql:oracle
    container_name: ${DB_HOST}
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_TCP_PORT: ${DB_PORT}

    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - mysql_the_bin:/var/lib/mysql
    networks:
      - network

  nginx:
    image: nginx:stable-alpine
    container_name: the-bin-nginx
    environment:
      - PHP_ENDPOINT=the-bin-php
      - NODE_ENDPOINT=the-bin-node
    depends_on:
      php:
        condition: service_started
      node:
        condition: service_started
    networks:
      - network
    ports:
      - 8080:8080
    volumes:
      - ./config/nginx/nginx.${APP_ENV}.conf.template:/etc/nginx/templates/default.conf.template

  php:
    image: the-bin-php:development
    container_name: the-bin-php
    build:
      context: .
      target: ${APP_ENV}
    env_file:
      - ./.env
    networks:
      - network
    volumes:
      - ./src:/var/www/app

  node:
    image: node:lts-alpine
    container_name: the-bin-node
    env_file:
      - ./.env
    networks:
      - network
    volumes:
      - ./src:/var/www/app
    ports:
      - 5173:5173
    working_dir: /var/www/app
    entrypoint: sh -c 'npm install && if [ "$APP_ENV" = "production" ]; then npm run build; else npm run dev; fi;'

  # ---- Redis Single for Local Development ----
  redis:
    platform: linux/amd64
    container_name: the-bin-redis
    image: redis:7.0
    command: redis-server --requirepass bitnami
    volumes:
      - cache:/data
    networks:
      - network
